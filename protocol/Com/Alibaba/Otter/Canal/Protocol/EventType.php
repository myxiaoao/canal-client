<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: EntryProtocol.proto

namespace Com\Alibaba\Otter\Canal\Protocol;

use UnexpectedValueException;

/**
 ** 事件类型 *
 *
 * Protobuf type <code>com.alibaba.otter.canal.protocol.EventType</code>
 */
class EventType
{
    /**
     * Generated from protobuf enum <code>EVENTTYPECOMPATIBLEPROTO2 = 0;</code>
     */
    const EVENTTYPECOMPATIBLEPROTO2 = 0;
    /**
     * Generated from protobuf enum <code>INSERT = 1;</code>
     */
    const INSERT = 1;
    /**
     * Generated from protobuf enum <code>UPDATE = 2;</code>
     */
    const UPDATE = 2;
    /**
     * Generated from protobuf enum <code>DELETE = 3;</code>
     */
    const DELETE = 3;
    /**
     * Generated from protobuf enum <code>CREATE = 4;</code>
     */
    const CREATE = 4;
    /**
     * Generated from protobuf enum <code>ALTER = 5;</code>
     */
    const ALTER = 5;
    /**
     * Generated from protobuf enum <code>ERASE = 6;</code>
     */
    const ERASE = 6;
    /**
     * Generated from protobuf enum <code>QUERY = 7;</code>
     */
    const QUERY = 7;
    /**
     * Generated from protobuf enum <code>TRUNCATE = 8;</code>
     */
    const TRUNCATE = 8;
    /**
     * Generated from protobuf enum <code>RENAME = 9;</code>
     */
    const RENAME = 9;
    /**
     **CREATE INDEX*
     *
     * Generated from protobuf enum <code>CINDEX = 10;</code>
     */
    const CINDEX = 10;
    /**
     * Generated from protobuf enum <code>DINDEX = 11;</code>
     */
    const DINDEX = 11;
    /**
     * Generated from protobuf enum <code>GTID = 12;</code>
     */
    const GTID = 12;
    /**
     ** XA *
     *
     * Generated from protobuf enum <code>XACOMMIT = 13;</code>
     */
    const XACOMMIT = 13;
    /**
     * Generated from protobuf enum <code>XAROLLBACK = 14;</code>
     */
    const XAROLLBACK = 14;
    /**
     ** MASTER HEARTBEAT *
     *
     * Generated from protobuf enum <code>MHEARTBEAT = 15;</code>
     */
    const MHEARTBEAT = 15;

    private static $valueToName = [
        self::EVENTTYPECOMPATIBLEPROTO2 => 'EVENTTYPECOMPATIBLEPROTO2',
        self::INSERT => 'INSERT',
        self::UPDATE => 'UPDATE',
        self::DELETE => 'DELETE',
        self::CREATE => 'CREATE',
        self::ALTER => 'ALTER',
        self::ERASE => 'ERASE',
        self::QUERY => 'QUERY',
        self::TRUNCATE => 'TRUNCATE',
        self::RENAME => 'RENAME',
        self::CINDEX => 'CINDEX',
        self::DINDEX => 'DINDEX',
        self::GTID => 'GTID',
        self::XACOMMIT => 'XACOMMIT',
        self::XAROLLBACK => 'XAROLLBACK',
        self::MHEARTBEAT => 'MHEARTBEAT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

